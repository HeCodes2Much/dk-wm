#!/bin/sh

# (re)load sxhkd for keybinds
pkill sxhkd; sxhkd &


# determine where to place the log file
logfile="$HOME/.yaxcmd.log"
[ -d "$HOME/.local/share/xorg" ] && logfile="$HOME/.local/share/xorg/yaxcmd.log"
: > "$logfile"

# Window manager configuration run as a compound command to
# redirect all output to the log file without redirecting each command.
# Not needed but it's nice to be able to tell when there are errors.
{
	# workspace settings
	# ------------------------

	# save active workspace number
	selws=$(yaxcmd ws print | awk '/\*/ {print $1}')
	last=$(yaxcmd ws print | awk 'BEGIN{ s="" }; { s=$1 }; END{ print s }')

	for i in $(yaxcmd ws print | awk '{print $1}'); do
		# set the active workspace for commands
		yaxcmd ws "$i"

		# set the layout on the active workspace
		yaxcmd set layout tile

		# set number of master windows on the active workspace
		yaxcmd set master absolute 1

		# set number of first stack windows on the active workspace
		yaxcmd set stack absolute 3

		# set gap width on the active workspace to an absolute value in pixels
		yaxcmd set gap absolute 0

		# set split ratio between master and stack(s)
		yaxcmd set split absolute 0.55

		# set split ratio between first and second stack
		yaxcmd set split stack absolute 0.55

		# set the last 2 workspaces to use some padding
		[ "$i" -gt $(( last - 2 )) ] && yaxcmd set pad l=400 r=400 t=200 b=200
	done

	# restore active workspace
	yaxcmd ws "$selws"


	# mouse window control
	# ---------------------
	# define mouse mod and move/resize buttons
	yaxcmd set mouse  mod alt  move button1  resize button3


	# borders
	# ---------
	# disable borders in monocle layout and tile layout with one window
	yaxcmd set border smart 1

	# set border width in pixels to an absolute value
	yaxcmd set border width  absolute 1

	# set the border colour for focused and unfocused windows
	yaxcmd set border colour focus   '#6699cc'
	yaxcmd set border colour unfocus '#000000'
	yaxcmd set border colour urgent  '#ee5555'


	# window rules
	# --------------

	# open window(s) on a specific workspace (assigned monitor)
	yaxcmd rule class="^gimp$" ws=2

	# open window(s) on a monitor by number or name (active workspace on monitor)
	yaxcmd rule class="^firefox$"  mon=0
	yaxcmd rule class="^chromium$" mon="HDMI-A-0"

	# open window(s) and use a callback function (defined in config.h)
	yaxcmd rule class="^mpv$" instance="^gl$" floating callback=albumart bw=0

	# open window(s) in a floating state
	yaxcmd rule class="^(pavucontrol|transmission-gtk|steam|lxappearance)$" floating

	# open window(s) with a specific geometry and coordinates (floating only!)
	yaxcmd rule class="^google-chrome$" title="^open files$" floating w=1280 h=720

} >> "$logfile" 2>&1 # append responses

# inform of any errors in a notification
if grep -q 'error:' "$logfile"; then
	hash notify-send && notify-send -t 0 -u critical "Yaxwmrc Has Errors" \
		"$(awk '/error:/ {sub(/^error: /, ""); print}' "$logfile")"
	exit 1
fi

exit 0
